program program' constlist' constlist'' innerlist' assignExchange' relation booloper arithoper ifstmt condition boolcond compcond expression expression' exchstmt term stmt assignoper exprconststring assignableexpr assignstmt instmt outstmt iostmt whilestmt idconstlist forstmt innerlist constlist
; int == while const , - and print > / <= * [ + character != *= } ] ... = < { if bool <=> ( conststring [] or >= += /= -= input id ) for in
program
program:stmt program'
program':stmt program'|eps
relation:<|>|<=|>=|!=|==
booloper:and|or
arithoper:+|-|*|/
ifstmt:if ( compcond ) { program }
condition:expression relation expression
boolcond:compcond booloper compcond
compcond:condition|bool
expression:term expression'
expression':arithoper expression'|eps
exchstmt:id <=> id ;
term:const|id
stmt:id assignExchange' ;|iostmt|ifstmt|whilestmt|forstmt
assignExchange':assignoper assignableexpr|<=> id
assignoper:=|+=|-=|*=|/=
exprconststring:expression
assignableexpr:exprconststring
assignstmt:id assignoper assignableexpr ;
instmt:input ( id ) ;
outstmt:print ( exprconststring ) ;
iostmt:instmt|outstmt
whilestmt:while ( compcond ) { program }
idconstlist:id|constlist
forstmt:for ( id in idconstlist ) { program }
innerlist:term innerlist'
innerlist':, term innerlist'|eps
constlist:[]|[ constlist' ]
constlist':term constlist''
constlist'':innerlist'|... term